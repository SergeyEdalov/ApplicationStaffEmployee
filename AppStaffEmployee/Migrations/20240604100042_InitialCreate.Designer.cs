// <auto-generated />
using System;
using AppStaffEmployee.Models.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace AppStaffEmployee.Migrations
{
    [DbContext(typeof(EmployeeContext))]
    [Migration("20240604100042_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Proxies:ChangeTracking", false)
                .HasAnnotation("Proxies:CheckEquality", false)
                .HasAnnotation("Proxies:LazyLoading", true)
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("AppStaffEmployee.Models.EmployeeModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<DateTime>("Birthday")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("birth_day");

                    b.Property<string>("Department")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("department");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(70)
                        .HasColumnType("character varying(70)")
                        .HasColumnName("full_name");

                    b.Property<string>("JobTitle")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("job_title");

                    b.Property<decimal>("Salary")
                        .HasColumnType("numeric")
                        .HasColumnName("salary");

                    b.Property<DateTime>("WorkStart")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("date_of_start_work");

                    b.HasKey("Id")
                        .HasName("employee_pkey");

                    b.ToTable("employees", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("bc3d5e78-fe17-4e95-b08e-a56d58384325"),
                            Birthday = new DateTime(1985, 2, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Department = "marketing",
                            FullName = "Popov Ivan Nikolaevich",
                            JobTitle = "trainee",
                            Salary = 56000.0m,
                            WorkStart = new DateTime(2023, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("db51e04d-e114-4e7f-bfe2-87ab10a48bbf"),
                            Birthday = new DateTime(1996, 10, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Department = "development",
                            FullName = "Djekson Bob",
                            JobTitle = "middle devops",
                            Salary = 80000.0m,
                            WorkStart = new DateTime(2020, 12, 25, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("67bbefef-a586-4416-b5f5-8d70f3b51d44"),
                            Birthday = new DateTime(1991, 1, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Department = "bookkeeping",
                            FullName = "Bastriykina Maria Sergeevna",
                            JobTitle = "accountant",
                            Salary = 60000.0m,
                            WorkStart = new DateTime(2015, 9, 22, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("af742a65-2b76-4895-91cf-7e35019309fd"),
                            Birthday = new DateTime(1994, 9, 6, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Department = "sale",
                            FullName = "Csvetov Victor Andreevich",
                            JobTitle = "chief Sales Specialist",
                            Salary = 115000.0m,
                            WorkStart = new DateTime(2017, 6, 5, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("6afd4cd6-0fe0-4d0b-aa72-bd4bf97a4860"),
                            Birthday = new DateTime(1978, 3, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Department = "bookkeeping",
                            FullName = "Konovalova Irina Alekseevna",
                            JobTitle = "chief accountant",
                            Salary = 90000.0m,
                            WorkStart = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("a0cf8d7c-f8a1-460a-9b97-14a58fae574f"),
                            Birthday = new DateTime(1990, 5, 28, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Department = "financial",
                            FullName = "Ermakov Sergey Vasilevich",
                            JobTitle = "financial director",
                            Salary = 100000.0m,
                            WorkStart = new DateTime(2022, 6, 3, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
