@model IPagedList<AppStaffEmployee.ViewModels.EmployeeViewModel>
@using X.PagedList
@using X.PagedList.Mvc.Core
@{
    ViewBag.Title = "Сотрудники";
    var currentSortField = ViewData["CurrentSortField"] as string;
    var currentSortOrder = ViewData["CurrentSortOrder"] as string;
    var currentFilter = ViewData["CurrentFilter"] as string;
}

<div class="text-begin">
    <a class="btn btn-primary" asp-action="Create">Добавить сотрудника</a>
</div>
<br />

<form asp-action="Index" method="get">
    <p>
        Search: <input type="text" name="searchString" value="@ViewData["CurrentFilter"]" />
        <input type="submit" value="Поиск" />
    </p>
    <p>
        Sort by:
        <select name="sortField">
            <!option value="FullName" @(currentSortField == "FullName" ? "selected" : "")>Имя</!option>
            <!option value="Birthday" @(currentSortField == "Birthday" ? "selected" : "")>Дата рождения</!option>
            <!option value="Department" @(currentSortField == "Department" ? "selected" : "")>Отдел</!option>
            <!option value="JobTitle" @(currentSortField == "JobTitle" ? "selected" : "")>Должность</!option>
            <!option value="WorkStart" @(currentSortField == "WorkStart" ? "selected" : "")>Дата начала работы</!option>
            <!option value="Salary" @(currentSortField == "Salary" ? "selected" : "")>Зарплата</!option>
        </select>
        Order:
        <select name="sortOrder">
            <!option value="asc" @(currentSortOrder == "asc" ? "selected" : "")>По возрастанию</!option>
            <!option value="desc" @(currentSortOrder == "desc" ? "selected" : "")>По убыванию</!option>
        </select>
        <input type="submit" value="Сортировать" />
    </p>
</form>


@if (Model.Any())
{
    <table class="table">
        <thead>
            <tr>
                <th></th>
                <th>Идентификатор</th>
                <th>Ф.И.О.</th>
                <th>Дата рождения</th>
                <th>Отдел</th>
                <th>Должность</th>
                <th>Дата начала работы</th>
                <th>Заработная плата</th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var employee in Model)
            {
                <tr>
                    <td>
                        <!-- Вариант для перехода на модальное окно -->
                        <button type="button" class="btn btn-danger" onclick="openDeleteModal('@employee.Id')">
                            <i class="fa fa-trash-alt"></i>
                        </button>
                        <!-- Вариант для перехода на отдельную страницу -->
@*                         <a asp-action="Delete" asp-route-id="@employee.Id" class="text-danger">
                            <i class="fa fa-trash-alt"></i>
                        </a> *@
                    </td>
                    <td>@employee.Id</td>
                    <td>
                        <a asp-action="Details" asp-route-id="@employee.Id">@employee.FullName</a>
                    </td>
                    <td>@employee.Birthday.ToShortDateString()</td>
                    <td>@employee.Department</td>
                    <td>@employee.JobTitle</td>
                    <td>@employee.WorkStart.ToShortDateString()</td>
                    <td>@string.Format("{0:N2}", employee.Salary)</td>
                    <td>
                        <a asp-action="Edit" asp-route-id="@employee.Id">
                            <i class="fa fa-user-edit"></i>
                        </a>
                    </td>
                </tr>
            }
        </tbody>
    </table>

    <div style="display: flex">
        @Html.PagedListPager(Model, page => Url.Action("Index", new
            {
                page,
                sortOrder = ViewData["CurrentSortOrder"],
                sortField = ViewData["CurrentSortField"],
                searchString = ViewData["CurrentFilter"]
            }))
    </div>
}
else
{
    <p>Сотрудники отсутствют</p>
}