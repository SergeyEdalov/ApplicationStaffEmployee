version: '3.8'

services:
  db:
    image: postgres
    restart: always
    environment:
      POSTGRES_PASSWORD: example
    ports:
      - "5432:5432"  
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 30s
      timeout: 10s
      retries: 5  

  adminer:
    image: adminer
    restart: always
    environment:
      ADMINER_DEFAULT_SERVER: db
    ports:
      - 8080:8080

  migrate:
    build:
      context: .
      dockerfile: AppStaffEmployee/Dockerfile
      target: migration
    depends_on:
      db:
        condition: service_healthy
    environment:
      - ConnectionStrings__employeeDb=Host=db;Database=employeeStaff;Username=postgres;Password=example

  employee:
    build:
      context: .
      dockerfile: AppStaffEmployee/Dockerfile
      target: runtime
    ports:
      - 7129:7129
    depends_on:
      db:
        condition: service_healthy
      migrate:
        condition: service_completed_successfully
    volumes:
      - ./certificates:/app/certificates
    environment:
      - ASPNETCORE_URLS=https://0.0.0.0:7129
      - ASPNETCORE_ENVIRONMENT=Production

volumes:
  postgres_data: